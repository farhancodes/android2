For Finding key hash (the below method will generate keyahsh which will useful to create fb id for your project) ----

public static String printKeyHash(Activity context) {
        PackageInfo packageInfo;
        String key = null;
        try {
            //getting application package name, as defined in manifest
            String packageName = context.getApplicationContext().getPackageName();

            //Retrieving package info
            packageInfo = context.getPackageManager().getPackageInfo(packageName,
                    PackageManager.GET_SIGNATURES);

            Log.e("Package Name=", context.getApplicationContext().getPackageName());

            for (Signature signature : packageInfo.signatures) {
                MessageDigest md = MessageDigest.getInstance("SHA");
                md.update(signature.toByteArray());
                key = new String(Base64.encode(md.digest(), 0));

                // String key = new String(Base64.encodeBytes(md.digest()));
                Log.e("Key Hash=", key);

            }
        } catch (PackageManager.NameNotFoundException e1) {
            Log.e("Name not found", e1.toString());
        } catch (NoSuchAlgorithmException e) {
            Log.e("No such an algorithm", e.toString());
        } catch (Exception e) {
            Log.e("Exception", e.toString());
        }

        return key;
    }


(1) build..xml (app level) ---

compile 'com.facebook.android:facebook-android-sdk:4.6.0'

(2-a)In string.xml --- put your facebook_app_id as below -

    <string name="facebook_app_id">1017625618347147</string>

    <string name="login_canceled_facebooklogin">Login Cancel</string>

    <string name="login_failed_facebooklogin">Login Failed</string>

(2-b) Manifes.xml ---

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.promon">

    <uses-permission android:name="android.permission.INTERNET" />
   

    <uses-feature android:name="android.hardware.camera"
        android:required="true" />

    <application
        android:name=".utility.MyApplication"
        android:allowBackup="true"
        android:icon="@drawable/launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">

        <activity
            android:name=".activity.MainActivity"
            android:screenOrientation="portrait"
            android:noHistory="true"
            android:theme="@style/Theme.Transparent">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

        </activity>

        <activity
            android:name="com.facebook.FacebookActivity"
            android:configChanges="keyboard|keyboardHidden|screenLayout|screenSize|orientation"
            android:label="@string/app_name"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <meta-data
            android:name="com.facebook.sdk.ApplicationId"
            android:value="@string/facebook_app_id" />

    </application>

</manifest>

(3) In XML --- (LoginButton & FrameLayout are inside relative layout to set custom fbLogin image from drawable)

<RelativeLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="40dp">

            <com.facebook.login.widget.LoginButton
                xmlns:fb="http://schemas.android.com/apk/res-auto"
                android:id="@+id/login_button"
                style="@style/FacebookLoginButton"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_gravity="center_horizontal"
                android:layout_marginLeft="35dp"
                android:layout_marginRight="35dp"
                android:layout_marginTop="5dp" />

            <FrameLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content">

                <ImageView
                    android:layout_width="match_parent"
                    android:layout_height="50dp"
                    android:layout_marginLeft="30dp"
                    android:layout_marginRight="30dp"
                    android:background="@drawable/facebook_image" />
            </FrameLayout>

        </RelativeLayout>


(4) In SplashActivity or MainActivity initialize FacebookSdk by putting
********  FacebookSdk.sdkInitialize(getApplicationContext());  just below super.onCreate(savedInstanceState); *****

public class Splash extends Activity {
    private static int SPLASH_TIME_OUT = 3000;
    public static String deviceId;
    private PrefManager mPrefManager;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        FacebookSdk.sdkInitialize(getApplicationContext());
        setContentView(R.layout.activity_splash);
        
(5) in your login fragment --

import com.facebook.AccessToken;
import com.facebook.AccessTokenTracker;
import com.facebook.CallbackManager;
import com.facebook.FacebookCallback;
import com.facebook.FacebookException;
import com.facebook.GraphRequest;
import com.facebook.GraphResponse;
import com.facebook.Profile;
import com.facebook.ProfileTracker;
import com.facebook.login.LoginResult;
import com.facebook.login.widget.LoginButton;
import com.facebook.share.internal.ShareConstants;

import org.json.JSONException;
import org.json.JSONObject;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;

public class LoginHome extends Fragment implements View.OnClickListener {
    public MainActivity mainActivity;
    private CallbackManager callbackManager;
    private AccessTokenTracker accessTokenTracker;
    private ProfileTracker profileTracker;
    String fb_user_name;
    String profile_pic_url = "";

    public LoginHome(MainActivity mainActivity) {
        this.mainActivity = mainActivity;
    }


    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
		callbackManager = CallbackManager.Factory.create();
        accessTokenTracker = new AccessTokenTracker() {
            @Override
            protected void onCurrentAccessTokenChanged(AccessToken oldToken, AccessToken newToken) {

            }
        };
        profileTracker = new ProfileTracker() {
            @Override
            protected void onCurrentProfileChanged(Profile oldProfile, Profile newProfile) {
                displayMessage(newProfile);
            }
        };
        accessTokenTracker.startTracking();
        profileTracker.startTracking();
       

    }

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_login_home, container, false);
      
	/* initview(view);
	   listenerView();	*/
 
        return view;
    }
	
	  @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        LoginButton loginButton = (LoginButton) view.findViewById(R.id.login_button);    // fb login button id
        loginButton.setReadPermissions("email");
        loginButton.setFragment(this);
        loginButton.registerCallback(callbackManager, callback);
    }

    private FacebookCallback<LoginResult> callback = new FacebookCallback<LoginResult>() {
        @Override
        public void onSuccess(LoginResult loginResult) {
            AccessToken accessToken = loginResult.getAccessToken();
            Profile profile = Profile.getCurrentProfile();
            displayMessage(profile);
            GraphRequest request = GraphRequest.newMeRequest(loginResult.getAccessToken(), new GraphRequest.GraphJSONObjectCallback() {
                @Override
                public void onCompleted(JSONObject object, GraphResponse response) {
                    Log.i("LoginActivity", response.toString());
                    Log.i("Object", "" + object);
                    // Get facebook data from login
                    Bundle bundle = getFacebookData(object);
                    final String user_email, login_type, social_type, social_id;
                    if (fb_user_name != null) {
                        fb_user_name = fb_user_name.replaceAll(" ", "%20");
                    }
                    Log.d("fb user name", "farhan" + fb_user_name);
                    user_email = bundle.getString("email");
                    login_type = "android";
                    social_type = "facebook";
                    social_id = bundle.getString("idFacebook");
	
                }
            });
            Bundle parameters = new Bundle();
            parameters.putString("fields", "id, first_name, last_name, email,gender, birthday, location"); // Par√°metros que pedimos a facebook
            request.setParameters(parameters);
            request.executeAsync();
        }

        private Bundle getFacebookData(JSONObject object) {
            Bundle bundle = null;
            try {
                bundle = new Bundle();
                String id = object.getString("id");
				/*	profile_pic_url="https://graph.facebook.com/" + id + "/picture?type=small";  for small dp */
                URL profile_pic = new URL("https://graph.facebook.com/" + id + "/picture?width=98&height=98");
				//    String profile_pic_url="https://graph.facebook.com/" + id + "/picture?width=98&height=98";

                Log.i("profile_pic", profile_pic + "");
                bundle.putString("profile_pic", profile_pic.toString());
                bundle.putString("idFacebook", id);
                if (object.has("first_name"))
                    bundle.putString("first_name", object.getString("first_name"));
                Log.d("firstname", object.getString("first_name"));
                if (object.has("last_name"))
                    bundle.putString("last_name", object.getString("last_name"));
                Log.d("last_name", object.getString("last_name"));
                if (object.has("email"))
                    bundle.putString("email", object.getString("email"));
                Log.d("email", object.getString("email"));
                if (object.has("gender"))
                    bundle.putString("gender", object.getString("gender"));
                if (object.has("birthday"))
                    bundle.putString("birthday", object.getString("birthday"));
                if (object.has("location"))
                    bundle.putString("location", object.getJSONObject("location").getString("name"));
                return bundle;
            } catch (MalformedURLException e) {
                e.printStackTrace();
            } catch (JSONException e) {
                e.printStackTrace();
            }
            return bundle;
        }


        @Override
        public void onCancel() {
            Toast.makeText(mainActivity, getResources().getString(R.string.login_canceled_facebooklogin), Toast.LENGTH_SHORT).show();
//            progress.dismiss();
        }

        @Override
        public void onError(FacebookException e) {
            Toast.makeText(mainActivity, getResources().getString(R.string.login_failed_facebooklogin), Toast.LENGTH_SHORT).show();
//            progress.dismiss();
            Log.d("loginresult", "" + e);
        }
    };

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        callbackManager.onActivityResult(requestCode, resultCode, data);
       
    }

    private void displayMessage(Profile profile) {
        if (profile != null) {
            Log.d("profile name", profile.getName());
            fb_user_name = profile.getName();
        }
    }

    @Override
    public void onResume() {
        super.onResume();
        Profile profile = Profile.getCurrentProfile();
        displayMessage(profile);
    }

	@Override
    public void onStop() {
        super.onStop();
        accessTokenTracker.stopTracking();
        profileTracker.stopTracking();
    }
}


/*******************End********************/
